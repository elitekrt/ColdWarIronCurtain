on_actions = {
	# country 
	on_new_term_election = {
		random_events = {
			100 = usa.1002
			100 = usa.19603
			100 = usa.19563
			100 = usa.19643
			100 = usa.19683
			100 = usa.19723
			100 = usa.19763
			100 = usa.19803
			100 = usa.19843
			100 = usa.19883
			100 = usa.19923
			100 = usa.19963
			100 = usa.20003
			100 = usa.20043
			100 = usa.20083
			100 = usa.20123
			100 = usa.20163
		}
		random_events = {
			100 = Canada_Elections.1
			100 = Canada_Elections.2
			100 = Canada_Elections.3
			100 = Canada_Elections.4
		}
		random_events = {
			100 = cw_saf.20
			100 = cw_saf.1
		}
		random_events = {
			100 = India_Elections.1
			100 = India_Elections.2
			100 = India_Elections.3
			100 = India_Elections.4
			100 = India_Elections.5
			100 = India_Elections.6
		}
		random_events = {
			100 = election.1
		}
		random_events = {
			100 = mex.1
			100 = mex.2
		}
		random_events = {
			100 = wgr.2500
			100 = wgr.200
			100 = wgr.201
			100 = wgr.202
			100 = wgr.204
			100 = wgr.205
			100 = wgr.206
			100 = wgr.207
			100 = wgr.208
			100 = wgr.209
			100 = wgr.210
			100 = wgr.211
		}
		random_events = {
			100 = ita.200
			100 = ita.250
			100 = ita.201
		}
		random_events = {
			100 = por.1
			100 = por.2
		}
		random_events = {
			100 = fin.200
			100 = fin.201
			100 = fin.202
			100 = fin.203
			100 = fin.204
			100 = fin.205
			100 = fin.206
		}
		random_events = {
			100 = japan_elections.1
			100 = japan_elections.2
			100 = japan_elections.3
			100 = japan_elections.4	
		}
		random_events = {
			100 = KOR_Elections.1963
			100 = KOR_Elections.1967
			100 = KOR_Elections.1971
		}
		random_events = {
			100 = saf_elections.1
			100 = saf_elections.2
			100 = saf_elections.3
		}
		random_events = {
			100 = french_elections.2
			100 = french_elections.3
			100 = french_elections.1
			100 = french_elections.4
			100 = french_elections.5	
			100 = french_elections.6	
			100 = french_elections.7	
			100 = french_elections.8	
			100 = french_elections.9	
			100 = french_elections.10
		}
		random_events = {
			100 = SWE_Elections.1
			100 = SWE_Elections.2
			100 = SWE_Elections.3
			100 = SWE_Elections.4
			100 = SWE_Elections.5
			100 = SWE_Elections.6
			100 = SWE_Elections.7
			100 = SWE_Elections.8
			100 = SWE_Elections.9
			100 = SWE_Elections.10
		}
		random_events = {
			100 = rho.1
			100 = rho.104
			100 = rho.126
			100 = rho.127
			100 = rho.128
		}
		random_events = {
			100 = nic.1
		}
		random_events = {
			100 = cuba.25
		}
		random_events = {
			100 = swi_elections.1
			100 = swi_elections.2
			100 = swi_elections.3
			100 = swi_elections.4
		}
	}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
		random_events = {
			#100 = ace_promoted.1
			#5 = ace_promoted.2
		}
	}

	# country, FROM = ace, PREV = enemy ace 
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
		random_events = {
			#100 = aces_killed_each_other.1
		}
	}
	
	# country, FROM = our ace, 
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
		random_events = {
			#100 = ace_killed_by_ace.1
		}
	}

	# country, FROM = our ace, 
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
		random_events = {
			#100 = ace_killed_other_ace.1
		}
	}

	# country, FROM = ace
	on_ace_killed = {
		random_events = {
			#100 = ace_died.1
		}
	}

	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {
		random_events = {
			1000 = NATO.1
		}
		random_events = {
			100 = war_justification.1
			100 = war_justification.2
			100 = war_justification.3
			100 = war_justification.4
			100 = war_justification.5
			100 = war_justification.6
			100 = war_justification.7
			100 = war_justification.8
			100 = war_justification.9
			100 = war_justification.10
			100 = war_justification.11
			100 = war_justification.12
			100 = war_justification.13
			100 = war_justification.14
			100 = war_justification.15
			100 = war_justification.16
			100 = war_justification.17
			100 = war_justification.18
			100 = war_justification.19
			17000 = 0
		}
	}

	on_wargoal_expire = {
		random_events = {
			100 = war_justification.301
		}
	}

	# country random events
	on_bi_yearly_pulse = {
		effect = {

			
		}
	}

	#on_five_year_pulse = {
	#
	#}

	on_border_war_lost = {
		effect = {
			owner = {
				country_event = goa.14 
				country_event = goa.16
			}
		}	
	}
	
	on_leave_faction = {
		effect = {
			FROM = {
				add_opinion_modifier = {
					modifier = faction_traitor
					target = ROOT
					days = 365
				}
			
				add_opinion_modifier = {
					modifier = faction_traitor_trade
					target = ROOT
					days = 365
				}
			}
			if = {
				limit = {
					FROM = {
						has_idea = nato_member
					}
				}
				remove_ideas = nato_member
			}
		}
	}

	#FROM is the one that joins the faction
	on_create_faction = {
		effect = {
		}
	}

	#FROM is country getting invited.
	on_offer_join_faction = {
		effect = {
	
		}
	}

	#FROM is faction leader on join faction requests.
	on_join_faction = {
		effect = {
			if = {
				limit = {
					FROM = {
						has_idea = nato_member
					}
				}
				add_ideas = nato_member
			}
		}
	}

	#FROM is war target
	on_declare_war = {
		effect = {
			if = {
				limit = {
					FROM = { has_idea = nato_member }
				}
				custom_effect_tooltip = TT_CALL_NATO
				if = {
					limit = {
						NOT = { has_global_flag = NATO_called_to_arms }
					}
					FROM = { country_event = NATO.2 }
				}
				set_country_flag = Attacked_NATO
			}
		}
	}
	
	# When a new faction is formed
	on_faction_formed = {
		effect = {
			news_event = news.159
		}
	}
	
	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		effect = {
			news_event = { id = country_capitulated.0 days = 0 }
			if = {
				limit = {
					FROM = { TAG = IRQ has_country_flag = IRAN_IRAQ_WAR_PREP }
					ROOT = { TAG = PER }
				}
				news_event = Iranian_Iraq_War.8
				transfer_state = 413
				transfer_state = 1328
				white_peace = PER
				413 = { add_core_of = IRQ }
				1328 = { add_core_of = IRQ }
				PER = {
					set_politics = {
						ruling_party = trotskyism
						elections_allowed = no
					}
				}
			}	
			if = {
				limit = {
					FROM = { TAG = PER }
					ROOT = { TAG = IRQ has_country_flag = IRAN_IRAQ_WAR_PREP }
				}
				news_event = Iranian_Iraq_War.7
				white_peace = IRQ
				puppet = IRQ
				IRQ = {
					set_politics = {
						ruling_party = radical_shiaism
						elections_allowed = no
					}
				}
			}				
			if = {
				limit = {
					FROM = { TAG = KPA }
					ROOT = { TAG = KOR }
				}
				KPA = { country_event = korean_surrender.3 }
				PRC = { country_event = korean_surrender.4 }
				KOR = { country_event = korean_surrender.5 }
				CHI = {
					white_peace = KPA
					white_peace = PRC
				}
			}		
			if = {
				limit = {
					FROM = { tag = NGA }
					ROOT = { tag = BFR }
				}
				news_event = Biafra_War.3
			}
			if = {
				limit = {
					FROM = { tag = KOR }
					ROOT = { tag = PRC }
					PRC = {
						has_idea = korean_war
					}
				}
				PRC = {
					white_peace = KOR
					white_peace = USA
					white_peace = CHI
				}
				USA = {
					white_peace = PRC
					dismantle_faction = yes
				}
				CHI = {
					white_peace = PRC
					dismantle_faction = yes
				}
				KPA = {
					white_peace = KOR
				}
				KOR = {
					white_peace = PRC
					white_peace = KPA
					dismantle_faction = yes
					news_event = korea.12
					annex_country = { target = KPA transfer_troops = yes }				
					set_global_flag = KOREA_CEASEFIRE_UN
				}
			}
		}
	}
	on_capitulation = {
		effect = {
			news_event = { id = country_capitulated.0 days = 0 }
			

		}
	}
	# ROOT is previously capitualted country
	on_uncapitulation = {
		effect = {
		}
	}

	on_government_change = {
		effect = {			
			#Make sure Soviet can always create factions
			if = {
				limit = {
					original_tag = SOV
					NOT = { has_government = communism }
				}
				set_rule = { can_create_factions = yes }
			}
			if = {
				limit = { has_government = democratic }
				if = {
					limit = { has_idea = democratic_opposition_voicing_protests }
					remove_ideas = democratic_opposition_voicing_protests
				}
				if = {
					limit = { has_idea = democratic_revolutionaries }
					remove_ideas = democratic_revolutionaries
				}
				if = {
					limit = { has_idea = reign_of_terror }
					remove_ideas = reign_of_terror
				}
			}
			if = {
				limit = { has_government = communism }
				if = {
					limit = { TAG = SAF }
					set_cosmetic_tag = SAF_COM
				}
				if = {
					limit = { has_idea = communist_partisans_recruiting }
					remove_ideas = communist_partisans_recruiting
				}
				if = {
					limit = { has_idea = communist_revolutionaries }
					remove_ideas = communist_revolutionaries
				}
				if = {
					limit = { has_idea = communism_defeated }
					remove_ideas = communism_defeated
				}

				#Remove anti_soviet_pact
				if = {
					limit = { has_idea = anti_soviet_pact }
					remove_ideas = anti_soviet_pact
				}
			}
			if = {
				limit = { has_government = fascism }
				if = {
					limit = { has_idea = fascist_assault_divisions }
					remove_ideas = fascist_assault_divisions
				}
				if = {
					limit = { has_idea = fascist_revolutionaries }
					remove_ideas = fascist_revolutionaries
				}
				if = {
					limit = { has_idea = fascism_defeated }
					remove_ideas = fascism_defeated
				}
				if = {
					limit = { has_idea = anti_nazi_coup }
					remove_ideas = anti_nazi_coup
				}
				if = {
					limit = { tag = WGR }
					set_cosmetic_tag = WGR_fascist
				}
				if = {
					limit = { tag = DDR }
					set_cosmetic_tag = DDR_fascist
				}
			}
			#Replace the following two with events for SOV if they are not communist.
			#if = {
			#	limit = { 
			#		OR = {
			#			has_idea = trotskyite_plot 
			#			has_idea = trotskyite_plot_purged
			#		}
			#		NOT = {
			#			has_civil_war = yes
			#		}
			#	}
			#	country_event = { id = soviet.54 }
			#}
		}
	}

	on_coup_succeeded = {
		effect = {
			#Turn elections on for democracies created from coup
			random_other_country = {
				limit = {
					has_government = democratic
					original_tag = ROOT
				}
				set_politics = {
					elections_allowed = yes
				}
			}
		}
	}

	#ROOT is winner #FROM gets annexed - This will also fire on_annex
	on_civil_war_end = {
		effect = {
		}
	}

	#Not run on a specific country.
	on_startup = {

		effect = {
######################################################################
#####################CWIC DEFINES, DO NOT TOUCH#######################
#defines version
	set_variable = { ICDefinesVersion = 31 }
#Use [?global.varname] in loc to display them
#Use global.varname in scripts to use them
#Bulk is 10x the base
#Large is 3x base
#Upgrade cost categories = global.UPC_(category)
#Upgrade cost telecoms = global.UPTC_(statesize(mini#mi-sma#/nominal#nom-med#/largo#lar+#))(com0-3)_(pop(small#1-2#/medium#3-5#/large#7-15#),overpopulated)
#MercDuration is the length of the mercenary contract payments
	
	
	#STELLAR AI UWU# 
	#AI RATIOS FOR ECONOMICS AND BUILDING#
	set_variable = { ai_power_ratio = 0.25 } #Ratio of power plants to office park/industrial park/dockyard/military factory
	set_variable = { ai_office_ratio = 0.25 } #Ratio of office parks to industrial parks
	set_variable = { ai_agri_investment = 0.25 } #Percentage of industry to invest in agri-industrial complexes until positive
	set_variable = { ai_water_point = 25 } #Number of factories minimum to start investing 15 industrial parks regularly to building water infra
	set_variable = { ai_renewable_point = 45 } #Number of factories minimum to start diverting to renewable and nuclear power
	set_variable = { ai_renewable_ratio = 0.3 } #Ratio of renewable to fossil when the renewable point is reached
	set_variable = { ai_nuclear_ratio = 0.05 } #Ratio of nuclear to fossil when the renewable point is reached
	
	#DIVIDERS
	set_variable = { GlobalCredit = 0.45 } #Income from Production/Trade/Commerce
	set_variable = { GlobalTaxCredit = 1.00 } #Income from Taxes
	set_variable = { GlobalDebit = 0.28 } #Policy Expenses
	set_variable = { GlobalEdictDebit = 0.44 } #Edict/Program/Project Expenses
	
	set_variable = { PreindustrialTaxCredit = 0.5 }
	set_variable = { IndustrialTaxCredit = 1 }
	set_variable = { DevelopedTaxCredit = 1.25 }
	set_variable = { ModernTaxCredit = 1.5 }
	set_variable = { AutomatedTaxCredit = 1.75 }
	
	###WEAPON PURCHASE PRICES###
	#Guns, support equipment, towed support weapons
	set_variable = { WPTierOne = 10 }
	#Trucks, light sp support weapons, medium support weapons
	set_variable = { WPTierTwo = 20 }
	#IFVs, Heavy Support Weapons, Medium SP Weapons
	set_variable = { WPTierThree = 40 }
	#Jets, Tanks
	set_variable = { WPTierFour = 80 }
	#Bombers
	set_variable = { WPTierFive = 120 }
	#Frigates (x4), Destroyers (x2) Single-Small Submarines (x2)
	set_variable = { WPTierSix = 250 }
	#Cruisers, Light Carriers
	set_variable = { WPTierSeven = 350 }
	
	set_variable = { LargePer = 5 } #Large Purchase Price
	set_variable = { BulkPer = 20 } #Bulk Purchase Price
	
	set_variable = { SmallCooldown = 1 } #Years cooldown on 1x purchases
	set_variable = { LargeCooldown = 3 } #Years backorder on large purchases
	set_variable = { BulkCooldown = 5 } #Years backorder on bulk purchases
	set_variable = { SmallNavalCooldown = 3 } #Years backorder on small naval ships
	set_variable = { NominalNavalCooldown = 4 } #Years backorder on medium naval ships
	set_variable = { LargeNavalCooldown = 6 } #Years backorder on large naval ships
	
	#QUANTITIES#
	#Civ Market
	set_variable = { SupportPer = 100 }
	set_variable = { MotorPer = 100 }
	set_variable = { UtilityHeliPer = 100 }
	set_variable = { CargoHeliPer = 24 }
	set_variable = { LightJetPer = 20 }
	set_variable = { TransportPer = 10 }
	set_variable = { ConvoyPer = 10 }
	#By Contract
	set_variable = { InfantryPer = 100 }
	set_variable = { InfantryBulkPer = 150 } #Bulk Sale highly outdated weapons
	set_variable = { InfantryPiratePer = 200 } #Exceptionally Poor Quality Black Market Weapons
	set_variable = { DFGPer = 36 }
	set_variable = { ATGMPer = 36 }
	set_variable = { AAPer = 36 }
	set_variable = { SAMPer = 24 }
	set_variable = { LtArtyPer = 48 }
	set_variable = { ArtyPer = 36 }
	set_variable = { HtArtyPer = 24 }
	set_variable = { LtPer = 50 }
	set_variable = { MCVPer = 50 }
	set_variable = { MBTPer = 40 }
	set_variable = { APCPer = 50 }
	set_variable = { IFVPer = 40 }
	set_variable = { ScoutHeliPer = 12 }
	set_variable = { MultirolePer = 20 }
	set_variable = { MultiroleBulkPer = 30 } #Non-Jet
	set_variable = { CVMultirolePer = 10 }
	set_variable = { CVMultiroleBulkPer = 15 } #Non-Jet
	
	###MERCENARY VARIABLES###
	#HIRE COST IS DETERMINED BY SALARY + MANPOWER COST + EQUIPMENT COST#
	#COSTS#  #global.Merc[Grade]ManpowerPrice is the final cost per manpower. It is multiplied by the base cost
	set_variable = { MercMilitia = 25 } #SALARIES
	set_variable = { MercLight = 50 } #SALARIES
	set_variable = { MercMobile = 100 } #SALARIES
	set_variable = { MercPro = 300 } #SALARIES
	set_variable = { MercManpowerPrice = 0.01 } #Base cost of 1000 manpower to replenish or hire, multiplied by merc contract price
	
	set_variable = { MercYears = 0.5 } #INTERVAL/FREQUENCY OF PAYMENTS 
	#global.MercDuration# is the exported variable
	
	#GLOBAL MANPOWER#
	set_variable = { MercMilitiaManpower = 20000 } #Manpower per Company
	set_variable = { MercLightManpower = 10000 } #Manpower per Company
	set_variable = { MercMobileManpower = 10000 } #Manpower per Company
	set_variable = { MercProManpower = 5000 } #Manpower per Company
	set_variable = { MercManpowerReplenish = 0.02 } #Percent manpower to replenish per month
	#EQUIPMENT AVAILABLE#
	#1 merc equipment = 10 cost ic
	set_variable = { MercEquipmentPrice = 50 } #Price Per 100 Merc Equipment Piece Replenish
	set_variable = { MercEquipmentPer = 50 } #Maximum Merc Equipment Purchasable per Military Factory in ZA WUARDO
	set_variable = { MercEquipmentReplenish = 0.03 } #Percent Equipment in contract pool to Replenish per Month
	
	###RGO PURCHASE PRICES AND RESOURCE GAINS###
	#Rare Earths, Nuclear Materiel
	set_variable = { RGOResourceRareMicro = 3 }
	set_variable = { RGOResourceRareSmall = 6 }
	set_variable = { RGOResourceRareMedium = 8 }
	set_variable = { RGOResourceRareLarge = 12 }
	#Light Metals, Construction Metals, Food
	set_variable = { RGOResourceCommonMicro = 8 }
	set_variable = { RGOResourceCommonSmall = 12 }
	set_variable = { RGOResourceCommonMedium = 16 }
	set_variable = { RGOResourceCommonLarge = 24 }
	#Petrochemicals
	set_variable = { RGOResourcePetrolMicro = 8 }
	set_variable = { RGOResourcePetrolSmall = 12 }
	set_variable = { RGOResourcePetrolMedium = 18 }
	set_variable = { RGOResourcePetrolLarge = 24 }
	set_variable = { RGOResourcePetrolMega = 50 }
	
	##RGO Costs##
	set_variable = { RGOTierOne = 120 } #Small
	set_variable = { RGOTierTwo = 240 } #Standard
	set_variable = { RGOTierThree = 360 } #Expensive
	set_variable = { RGOTierFour = 480 } #Highly Expensive
	set_variable = { RGOTierFive = 600 } #Ultra Expensive
	set_variable = { RGOTierSix = 3000 } #Extreme Fever Dream Projects
	
	set_variable = { RGOElectricity = 360 } #General Electricity Project cost
	set_variable = { RGOFusion = 7000 } #Tokamak Fusion Reactor cost
	
	##Tourist Infrastructure Costs#
	set_variable = { TIHistoricalSiteSmallCost = 60 }
	set_variable = { TIHistoricalSiteLargeCost = 240 }
	set_variable = { TIHistoricalSiteReligiousCost = 120 }
	
	set_variable = { TIResortSmallCost = 120 }
	set_variable = { TIResortNominalCost = 240 }
	set_variable = { TIResortLargeCost = 360 }
	
	set_variable = { TINaturalSiteNominalCost = 60 }
	set_variable = { TINaturalSiteLargeCost = 120 }
	
	set_variable = { TIUltraCost = 4000 } #Extreme Fever Dream Projects
	
	#Tourist Infrastructure Values (How much tourist infrastructure each building is worth, determines income, NOT SITE IMPORTANCE OR NUMBER OF TOURISTS)#
	set_variable = { TIHistoricalSiteSmall = 0.25 } #Value of Minor historical site or museum
	set_variable = { TIHistoricalSiteLarge = 0.5 } #Value of Major historical site or historical society
	set_variable = { TIHistoricalSiteReligious = 2 } #Value of Religious historical site
	
	set_variable = { TIResortSmall = 0.25 } #Value of a small resort OR small resort improvement
	set_variable = { TIResortNominal = 0.5 } #Value of a nominal resort OR nominal resort improvement
	set_variable = { TIResortLarge = 0.75 } #Value of a large resort OR large resort improvement
	
	set_variable = { TINaturalSite = 0.25 } #Value of national park
	set_variable = { TINaturalSite = 1 } #Value of natural wonder
	
	set_variable = { TIHistoricalUltra = 6 } #Value of fever dream project
	set_variable = { TIResortUltra = 6 } #Value of fever dream project
	set_variable = { TINaturalUltra = 6 } #Value of fever dream project
	
	##STATE CATEGORY COSTS##
	set_variable = { dev0per = 90 }
	set_variable = { dev1per = 48 }
	set_variable = { dev2per = 75 }
	set_variable = { dev3per = 120 }
	
	set_variable = { category_upgrade_progress_per_month = 2 } #Percent category upgrade progress per month
	
	##TELECOMS COSTS##
	set_variable = { coms0per = 6 } #Installing Landlines
	set_variable = { coms1per = 12 } #Installing Digital Switches
	set_variable = { coms2per = 18 } #Installing Cellular
	set_variable = { coms3per = 30 } #Installing Broadband
	set_variable = { coms3per = 36 } #Installing Fiber Optic
	
	set_variable = { coms_mini_mult = 2 } #micro/small
	set_variable = { coms_nominal_mult = 5 } #nominal/medium
	set_variable = { coms_largo_mult = 13 } #large/massive/gigantic
	
	set_variable = { coms_popsmall_mult = 2 } #Pop1/2
	set_variable = { coms_popmedium_mult = 5 } #Pop3/4/5
	set_variable = { coms_poplargo_mult = 10 } #Pop7/10/15
	set_variable = { coms_overpopulated_mult = 20 } #Pop20+
	
	set_variable = { coms_upgrade_progress_per_month = 10 } #Percent coms upgrade progress per month
########################DEFINES CALCULATIONS##########################
	
	set_variable = { WPTierOneLarge = WPTierOne }
	multiply_variable = { WPTierOneLarge = LargePer }
	set_variable = { WPTierOneBulk = WPTierOne }
	multiply_variable = { WPTierOneBulk = BulkPer }
	
	set_variable = { WPTierTwoLarge = WPTierTwo }
	multiply_variable = { WPTierTwoLarge = LargePer }
	set_variable = { WPTierTwoBulk = WPTierTwo }
	multiply_variable = { WPTierTwoBulk = BulkPer }
	
	set_variable = { WPTierThreeLarge = WPTierThree }
	multiply_variable = { WPTierThreeLarge = LargePer }
	set_variable = { WPTierThreeBulk = WPTierThree }
	multiply_variable = { WPTierThreeBulk = BulkPer }
	
	set_variable = { WPTierFourLarge = WPTierFour }
	multiply_variable = { WPTierFourLarge = LargePer }
	set_variable = { WPTierFourBulk = WPTierFour }
	multiply_variable = { WPTierFourBulk = BulkPer }
	
	set_variable = { WPTierFiveLarge = WPTierFive }
	multiply_variable = { WPTierFiveLarge = LargePer }
	set_variable = { WPTierFiveBulk = WPTierFive }
	multiply_variable = { WPTierFiveBulk = BulkPer }
	
	set_variable = { WPTierSixLarge = WPTierSix }
	multiply_variable = { WPTierSixLarge = LargePer }
	set_variable = { WPTierSixBulk = WPTierSix }
	multiply_variable = { WPTierSixBulk = BulkPer }
	
	set_variable = { WPTierSevenLarge = WPTierSeven }
	multiply_variable = { WPTierSevenLarge = LargePer }
	set_variable = { WPTierSevenBulk = WPTierSeven }
	multiply_variable = { WPTierSevenBulk = BulkPer }
	
	set_variable = { SmallCooldownYears = SmallCooldown }
	set_variable = { LargeCooldownYears = LargeCooldown }
	set_variable = { BulkCooldownYears = BulkCooldown }
	set_variable = { SmallNavalCooldownYears = SmallNavalCooldown }
	set_variable = { NominalNavalCooldownYears = NominalNavalCooldown }
	set_variable = { LargeNavalCooldownYears = LargeNavalCooldown }
	
	multiply_variable = { SmallCooldown = 365 }
	multiply_variable = { LargeCooldown = 365 }
	multiply_variable = { BulkCooldown = 365 }
	multiply_variable = { SmallNavalCooldownYears = 365 }
	multiply_variable = { NominalNavalCooldownYears = 365 }
	multiply_variable = { LargeNavalCooldownYears = 365 }
	
	set_variable = { SupportPerLarge = SupportPer }
	set_variable = { MotorPerLarge = MotorPer }
	set_variable = { UtilityHeliPerLarge = UtilityHeliPer }
	set_variable = { CargoHeliPerLarge = CargoHeliPer }
	set_variable = { LightJetPerLarge = LightJetPer }
	set_variable = { TransportPerLarge = TransportPer }
	set_variable = { ConvoyPerLarge = ConvoyPer }
	set_variable = { InfantryPerLarge = InfantryPer }
	set_variable = { InfantryBulkPerLarge = InfantryBulkPer }
	set_variable = { InfantryPiratePerLarge = InfantryPiratePer }
	set_variable = { DFGPerLarge = DFGPer }
	set_variable = { ATGMPerLarge = ATGMPer }
	set_variable = { AAPerLarge = AAPer }
	set_variable = { SAMPerLarge = SAMPer }
	set_variable = { LtArtyPerLarge = LtArtyPer }
	set_variable = { ArtyPerLarge = ArtyPer }
	set_variable = { HtArtyPerLarge = HtArtyPer }
	set_variable = { LtPerLarge = LtPer }
	set_variable = { MCVPerLarge = MCVPer }
	set_variable = { MBTPerLarge = MBTPer }
	set_variable = { APCPerLarge = APCPer }
	set_variable = { IFVPerLarge = IFVPer }
	set_variable = { ScoutHeliPerLarge = ScoutHeliPer }
	set_variable = { MultirolePerLarge = MultirolePer }
	set_variable = { MultiroleBulkPerLarge = MultiroleBulkPer }
	set_variable = { CVMultirolePerLarge = CVMultirolePer }
	set_variable = { CVMultiroleBulkPerLarge = CVMultiroleBulkPer }
	multiply_variable = { SupportPerLarge = LargePer }
	multiply_variable = { MotorPerLarge = LargePer }
	multiply_variable = { UtilityHeliPerLarge = LargePer }
	multiply_variable = { CargoHeliPerLarge = LargePer }
	multiply_variable = { LightJetPerLarge = LargePer }
	multiply_variable = { TransportPerLarge = LargePer }
	multiply_variable = { ConvoyPerLarge = LargePer }
	multiply_variable = { InfantryPerLarge = LargePer }
	multiply_variable = { InfantryBulkPerLarge = LargePer }
	multiply_variable = { InfantryPiratePerLarge = LargePer }
	multiply_variable = { DFGPerLarge = LargePer }
	multiply_variable = { ATGMPerLarge = LargePer }
	multiply_variable = { AAPerLarge = LargePer }
	multiply_variable = { SAMPerLarge = LargePer }
	multiply_variable = { LtArtyPerLarge = LargePer }
	multiply_variable = { ArtyPerLarge = LargePer }
	multiply_variable = { HtArtyPerLarge = LargePer }
	multiply_variable = { LtPerLarge = LargePer }
	multiply_variable = { MCVPerLarge = LargePer }
	multiply_variable = { MBTPerLarge = LargePer }
	multiply_variable = { APCPerLarge = LargePer }
	multiply_variable = { IFVPerLarge = LargePer }
	multiply_variable = { ScoutHeliPerLarge = LargePer }
	multiply_variable = { MultirolePerLarge = LargePer }
	multiply_variable = { MultiroleBulkPerLarge = LargePer }
	multiply_variable = { CVMultirolePerLarge = LargePer }
	multiply_variable = { CVMultiroleBulkPerLarge = LargePer }
	
	set_variable = { SupportPerBulk = SupportPer }
	set_variable = { MotorPerBulk = MotorPer }
	set_variable = { UtilityHeliPerBulk = UtilityHeliPer }
	set_variable = { CargoHeliPerBulk = CargoHeliPer }
	set_variable = { LightJetPerBulk = LightJetPer }
	set_variable = { TransportPerBulk = TransportPer }
	set_variable = { ConvoyPerBulk = ConvoyPer }
	set_variable = { InfantryPerBulk = InfantryPer }
	set_variable = { InfantryBulkPerBulk = InfantryBulkPer }
	set_variable = { InfantryPiratePerBulk = InfantryPiratePer }
	set_variable = { DFGPerBulk = DFGPer }
	set_variable = { ATGMPerBulk = ATGMPer }
	set_variable = { AAPerBulk = AAPer }
	set_variable = { SAMPerBulk = SAMPer }
	set_variable = { LtArtyPerBulk = LtArtyPer }
	set_variable = { ArtyPerBulk = ArtyPer }
	set_variable = { HtArtyPerBulk = HtArtyPer }
	set_variable = { LtPerBulk = LtPer }
	set_variable = { MCVPerBulk = MCVPer }
	set_variable = { MBTPerBulk = MBTPer }
	set_variable = { APCPerBulk = APCPer }
	set_variable = { IFVPerBulk = IFVPer }
	set_variable = { ScoutHeliPerBulk = ScoutHeliPer }
	set_variable = { MultirolePerBulk = MultirolePer }
	set_variable = { MultiroleBulkPerBulk = MultiroleBulkPer }
	set_variable = { CVMultirolePerBulk = CVMultirolePer }
	set_variable = { CVMultiroleBulkPerBulk = CVMultiroleBulkPer }
	multiply_variable = { SupportPerBulk = BulkPer }
	multiply_variable = { MotorPerBulk = BulkPer }
	multiply_variable = { UtilityHeliPerBulk = BulkPer }
	multiply_variable = { CargoHeliPerBulk = BulkPer }
	multiply_variable = { LightJetPerBulk = BulkPer }
	multiply_variable = { TransportPerBulk = BulkPer }
	multiply_variable = { ConvoyPerBulk = BulkPer }
	multiply_variable = { InfantryPerBulk = BulkPer }
	multiply_variable = { InfantryBulkPerBulk = BulkPer }
	multiply_variable = { InfantryPiratePerBulk = BulkPer }
	multiply_variable = { DFGPerBulk = BulkPer }
	multiply_variable = { ATGMPerBulk = BulkPer }
	multiply_variable = { AAPerBulk = BulkPer }
	multiply_variable = { SAMPerBulk = BulkPer }
	multiply_variable = { LtArtyPerBulk = BulkPer }
	multiply_variable = { ArtyPerBulk = BulkPer }
	multiply_variable = { HtArtyPerBulk = BulkPer }
	multiply_variable = { LtPerBulk = BulkPer }
	multiply_variable = { MCVPerBulk = BulkPer }
	multiply_variable = { MBTPerBulk = BulkPer }
	multiply_variable = { APCPerBulk = BulkPer }
	multiply_variable = { IFVPerBulk = BulkPer }
	multiply_variable = { ScoutHeliPerBulk = BulkPer }
	multiply_variable = { MultirolePerBulk = BulkPer }
	multiply_variable = { MultiroleBulkPerBulk = BulkPer }
	multiply_variable = { CVMultirolePerBulk = BulkPer }
	multiply_variable = { CVMultiroleBulkPerBulk = BulkPer }
	
	set_variable = { UPC_pop1 = dev0per }
	set_variable = { UPC_pop2 = dev0per }
	set_variable = { UPC_pop3 = dev0per }
	set_variable = { UPC_pop4 = dev0per }
	set_variable = { UPC_pop5 = dev0per }
	set_variable = { UPC_pop7 = dev0per }
	set_variable = { UPC_pop10 = dev0per }
	set_variable = { UPC_pop15 = dev0per }
	set_variable = { UPC_pop20 = dev0per }
	multiply_variable = { UPC_pop1 = 1 }
	multiply_variable = { UPC_pop2 = 2 }
	multiply_variable = { UPC_pop3 = 3 }
	multiply_variable = { UPC_pop4 = 4 }
	multiply_variable = { UPC_pop5 = 5 }
	multiply_variable = { UPC_pop7 = 7 }
	multiply_variable = { UPC_pop10 = 10 }
	multiply_variable = { UPC_pop15 = 15 }
	multiply_variable = { UPC_pop20 = 20 }
	
	set_variable = { UPC_pop1dev1 = dev1per }
	set_variable = { UPC_pop2dev1 = dev1per }
	set_variable = { UPC_pop3dev1 = dev1per }
	set_variable = { UPC_pop4dev1 = dev1per }
	set_variable = { UPC_pop5dev1 = dev1per }
	set_variable = { UPC_pop7dev1 = dev1per }
	set_variable = { UPC_pop10dev1 = dev1per }
	set_variable = { UPC_pop15dev1 = dev1per }
	set_variable = { UPC_pop20dev1 = dev1per }
	multiply_variable = { UPC_pop1dev1 = 1 }
	multiply_variable = { UPC_pop2dev1 = 2 }
	multiply_variable = { UPC_pop3dev1 = 3 }
	multiply_variable = { UPC_pop4dev1 = 4 }
	multiply_variable = { UPC_pop5dev1 = 5 }
	multiply_variable = { UPC_pop7dev1 = 7 }
	multiply_variable = { UPC_pop10dev1 = 10 }
	multiply_variable = { UPC_pop15dev1 = 15 }
	multiply_variable = { UPC_pop20dev1 = 20 }
	
	set_variable = { UPC_pop1dev2 = dev2per }
	set_variable = { UPC_pop2dev2 = dev2per }
	set_variable = { UPC_pop3dev2 = dev2per }
	set_variable = { UPC_pop4dev2 = dev2per }
	set_variable = { UPC_pop5dev2 = dev2per }
	set_variable = { UPC_pop7dev2 = dev2per }
	set_variable = { UPC_pop10dev2 = dev2per }
	set_variable = { UPC_pop15dev2 = dev2per }
	set_variable = { UPC_pop20dev2 = dev2per }
	multiply_variable = { UPC_pop1dev2 = 1 }
	multiply_variable = { UPC_pop2dev2 = 2 }
	multiply_variable = { UPC_pop3dev2 = 3 }
	multiply_variable = { UPC_pop4dev2 = 4 }
	multiply_variable = { UPC_pop5dev2 = 5 }
	multiply_variable = { UPC_pop7dev2 = 7 }
	multiply_variable = { UPC_pop10dev2 = 10 }
	multiply_variable = { UPC_pop15dev2 = 15 }
	multiply_variable = { UPC_pop20dev2 = 20 }
	
	set_variable = { UPC_pop1dev3 = dev3per }
	set_variable = { UPC_pop2dev3 = dev3per }
	set_variable = { UPC_pop3dev3 = dev3per }
	set_variable = { UPC_pop4dev3 = dev3per }
	set_variable = { UPC_pop5dev3 = dev3per }
	set_variable = { UPC_pop7dev3 = dev3per }
	set_variable = { UPC_pop10dev3 = dev3per }
	set_variable = { UPC_pop15dev3 = dev3per }
	set_variable = { UPC_pop20dev3 = dev3per }
	multiply_variable = { UPC_pop1dev3 = 1 }
	multiply_variable = { UPC_pop2dev3 = 2 }
	multiply_variable = { UPC_pop3dev3 = 3 }
	multiply_variable = { UPC_pop4dev3 = 4 }
	multiply_variable = { UPC_pop5dev3 = 5 }
	multiply_variable = { UPC_pop7dev3 = 7 }
	multiply_variable = { UPC_pop10dev3 = 10 }
	multiply_variable = { UPC_pop15dev3 = 15 }
	multiply_variable = { UPC_pop20dev3 = 20 }
	
	#No Building Slot Room Cost Reduction#
	#Reduce cost to upgrade because you gain no extra, or reduced, building slots at these levels
	multiply_variable = { UPC_pop20 = 0.75 }
	
	multiply_variable = { UPC_pop15dev1 = 0.9 }
	multiply_variable = { UPC_pop20dev1 = 0.75 }
	
	multiply_variable = { UPC_pop15dev2 = 0.75 }
	multiply_variable = { UPC_pop20dev2 = 0.6 }
	
	multiply_variable = { UPC_pop10dev3 = 0.9 }
	multiply_variable = { UPC_pop15dev3 = 0.75 }
	multiply_variable = { UPC_pop20dev3 = 0.6 }
	
	
	set_variable = { MercDuration = MercYears }
	multiply_variable = { MercDuration = 365 }
	
	set_variable = { MercMilitiaManpowerPrice = MercMilitia }
	set_variable = { MercLightManpowerPrice = MercLight }
	set_variable = { MercMobileManpowerPrice = MercMobile }
	set_variable = { MercProManpowerPrice = MercPro }
	multiply_variable = { MercMilitiaManpowerPrice = MercManpowerPrice }
	multiply_variable = { MercLightManpowerPrice = MercManpowerPrice }
	multiply_variable = { MercMobileManpowerPrice = MercManpowerPrice }
	multiply_variable = { MercProManpowerPrice = MercManpowerPrice }
	
########################END OF CALCULATIONS##########################
	
	#####ARMS SALES TECH STARTING LEVELS#####
	set_global_flag = WP_CAP_tech_2
	set_global_flag = WP_CAP_tech_1
	
	set_global_flag = WP_CUM_tech_2
	set_global_flag = WP_CUM_tech_1
	
	set_global_flag = WP_MAO_tech_1
	
	set_global_flag = WP_IND_tech_1
			
			###ECONOMICS###
			every_country = {
				ic_pulse = yes
				startup_influence = yes
				add_to_variable = { decryptTotal = 1 }
				add_to_variable = { encryptTotal = 1 }
				set_country_flag = bonds.25
			}
########################END OF CWIC DEFINES###########################
######################################################################
			
			YUG = {
				country_event = CRO_insurgency_options.0
			}
			ISR = {
				country_event = israel.10
			}
			every_country = {
				army_experience = 50
				navy_experience = 50
			}
			random_country = {
				add_to_array = { global.sd_array = 1 }
				add_to_array = { global.sd_array = 2 }
				add_to_array = { global.sd_array = 3 }
			}

			every_country = {
				if = {
					limit = {
						is_ai = yes
					}
					load_oob = "_ai_templates"
				}
			}
			AFG = {
				army_experience = 250
				navy_experience = 250
			}
			VTC = {
				army_experience = 666666
				navy_experience = 666666
				air_experience = 666666
				country_event = TUTOR.666
			}
			HOK = {
				army_experience = 250
				navy_experience = 250
			}
			USA = {
				army_experience = 100
				navy_experience = 100
			}
			SOV = {
				army_experience = 100
				navy_experience = 100
			}
			PRC = {
				army_experience = 50
			}
			RCG = {
				army_experience = 50
			}
			RAJ = {
				army_experience = 50
			}
			PAK = {
				army_experience = 50
			}
			KPA = {
				army_experience = 50
				navy_experience = 50
			}
			KOR = {
				army_experience = 50
				navy_experience = 50
			}
			ENG = {
				army_experience = 50
				navy_experience = 200
			}
			YUG = {
				army_experience = 50
			}
			ITA = {
				army_experience = 50
			}
			SPR = {
				army_experience = 50
			}
			XSM = {
				army_experience = 50
			}
			ISR = {
				army_experience = 50
			}

			USA = {
				country_event = focus_check.1
			}
			SOV = {
				country_event = sov.1001
			}
			"PHI" = {
				country_event = hukbalahap.1001
			}
			#SPR = {
			#	country_event = Maquis.1001
			#}
			SEN = {
				french_influence_col_idea_add = yes
			}
			MOR = {
				french_influence_col_idea_add = yes
			}
			RCG = {
				french_influence_col_idea_add = yes
			}
			DJI = {
				french_influence_col_idea_add = yes
			}
			TUN = {
				french_influence_col_idea_add = yes
			}
			SAR = {
				french_influence_col_idea_add = yes
			}
			AND = {
				french_influence_col_idea_add = yes
			}
			LOS = {
				french_influence_col_idea_add = yes
			}
			CAM = {
				french_influence_col_idea_add = yes
			}
			VIE = {
				french_influence_col_idea_add = yes
			}
			CMR = {
				french_influence_col_idea_add = yes
			}
			MAD = {
				french_influence_col_idea_add = yes
			}
			#every_country = {
			#	limit = {
			#		check_variable = { domestic_influence_amount > 0 }
			#	}
			#	recalculate_influence = yes
			#}
			VTC = {
				set_country_flag = ic_pulse_one_flag
			}	
			FRA = {
				set_division_template_lock = { division_template = "Légion étrangère Française" is_locked = yes }	
			}
			FRA = {
				country_event = { id = French_PM.1 days = 135 }
			}
			BUL = {
				if = {
					limit = {
						date < 1950.1.1
					}
					country_event = { id = BUL.100 days = 40 }
				}
			}
			PAK = {
				779 = {
					add_dynamic_modifier = {
						modifier = autonomous_state
					}		
				}
			}
			SOV = { add_threat = 17 }
			random_other_country = {
				limit = {
					is_ai = no
				}
				news_event = tutorial.1000
				
			}
			every_country = {
				limit = {
					date < 1950.1.1
					OR = {
						is_subject_of = ENG
						is_puppet_of = ENG
					}
				}
				add_to_war = {
					targeted_alliance = MAL
					enemy = MLA
				}
			}

			every_country = {
				limit = {
					date < 1950.1.1
					OR = {
						is_subject_of = RAJ
						is_puppet_of = RAJ
					}
				}
				add_to_war = {
					targeted_alliance = MAL
					enemy = MLA
				}
			}
			COL = {
				country_event = COL_pol.1
			}
			every_country = {
				country_event = TUTOR.0
				
			}
		}
	}

	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
		effect = {

			if = {
				limit = {
					tag = SOV
					NOT = { has_global_flag = conquest_helsinki_ussr }
					111 = { 
						is_controlled_by = USSR 
						is_owned_by = FIN 
					}
					SOV = { has_war_with = FIN }
				}
				news_event = conquest.1
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 78
					}
				}
				1235 = {
					add_core_of = SOV
				}
				78 = {
					add_core_of = SOV
				}
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 949
					}
				}
				949 = {
					add_core_of = SOV
				}
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 230
					}
				}
				230 = {
					add_core_of = SOV
				}
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 231
					}
				}
				231 = {
					add_core_of = SOV
				}
				934 = {
					add_core_of = SOV
				}
				933 = {
					add_core_of = SOV
				}
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 229
					}
				}
				229 = {
					add_core_of = SOV
				}
				799 = {
					add_core_of = SOV
				}
				935 = {
					add_core_of = SOV
				}
				798 = {
					add_core_of = SOV
				}
				419 = {
					add_core_of = SOV
				}
			}
		}
	}

	on_nuke_drop = {

		effect = {
			news_event = { id = nuke_dropped.2 days = 1 }
			news_event = { id = nuke_dropped.3 days = 1 }
			news_event = { id = nuke_dropped.4 days = 1 }
			news_event = { id = nuke_dropped.5 days = 1 }
			news_event = { id = nuke_dropped.6 days = 1 }
			news_event = { id = nuke_dropped.7 days = 1 }
			news_event = { id = nuke_dropped.8 days = 1 }
			news_event = { id = nuke_dropped.9 days = 1 }
			news_event = { id = nuke_dropped.10 days = 1 }
			news_event = { id = nuke_dropped.11 days = 1 }
			news_event = { id = nuke_dropped.12 days = 1 }
			news_event = { id = nuke_dropped.13 days = 1 }
		}
		random_events = {
			100 = nuke_dropped.0
			10000 = nuke_dropped.100
		}
	}
}
